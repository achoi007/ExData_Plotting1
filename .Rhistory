help(grep)
x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x
x
x <- c(3, 5)
x <- c(1, 3, 5)
y <- c(3, 2, 10)
cbind(x, y)
m <- cbind(x, y)
m
a <- cbind(1, 'a')
a
a <- cbind(3, 3.5)
a
class(a(1,1))
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
x
y <- 2:3
x + y
class(x+y)
d = x+y
x
class(x)
class(y)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 11] <- 4
x
a <- available.packages()
a
install.packages("slidify")
install.packages("KernSmooth")
library(KernSmooth)
install.packages("slidify")
install.packages("ggplot2")
install.package("devtools")
install.packages("devtools")
search()
library(ggplot2)
search()
find.package("devtools")
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("installr")
require(installr)
updateR(())
updateR()
exit
updateR()
exit
cube <- function(x, n) {}
cube <- function(x, n) {}
cube <- function(x, n) { x^3 }
cube(3)
cube(3, 4)
cube(3,4,5)
x <- 1:10
if (x > 5) { x <- 0 }
f <- function(x) {}
f <- function(x) {
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if (x < 3) {
NA
}
else {
10
}
x <- 5
y <- if (x < 3) {
NA
} else {
10
}
y
?set.seed
choose(6, 3)
x <- data.frame(id=sample(1:20), age=rnorm(20, 30, 10), sex=sample(c("M", "F"), size=10))
x <- data.frame(id=sample(1:20), age=rnorm(20, 30, 10), sex=sample(c("M", "F"), size=20))
x <- data.frame(id=sample(1:20), age=rnorm(20, 30, 10), sex = sample(c("M", "S"), 20))
sample(c("M", "F"), 20)
sample(c("M", "F"))
sample(c("M", "F"), size=20, replace=Y)
sample(c("M", "F"), size=20, replace=T)
x <- data.frame(id=sample(1:20), age=rnorm(20, 30, 10), sex = sample(c("M", "S"), size=20, replace=T))
x
x <- data.frame(id=sample(1:20), age=as.int(rnorm(20, 30, 10)), sex = sample(c("M", "S"), size=20, replace=T))
x <- data.frame(id=sample(1:20), age=as.integer(rnorm(20, 30, 10)), sex = sample(c("M", "S"), size=20, replace=T))
x
person <- x
person
str(person)
split(person, person$sex)
person <- data.frame(id=sample(1:20), age=as.integer(rnorm(20, 30, 10)), sex = sample(c("M", "F"), size=20, replace=T))
x <- null
x <- na
x <- NULL
person
str(person)
split(person, person$sex)
sapply(split(person, person$sex), mean)
sapply(split(person, person$sex), function(e) { mean(e$age) })
library(dplyr)
x
person
job <- data.frame(id=sample(1:15), job=sample(c("teacher", "OL", "IT", "Mgr", size=15, replace=T)), salary=rpois(15, 20000))
job <- data.frame(id=sample(1:15), job=sample(c("teacher", "OL", "IT", "Mgr"), size=15, replace=T), salary=rpois(15, 20000))
str(job)
merge(person, job, by.x=person$id, by.y=job$id)
merge(person, job)
merge(person, job, by.x=person$id, by.y=job$id)
?merge
merge(x=person, y=job, by.x="id", by.y="id")
library(dplyr)
?inner_join
?rename
job <- rename(job, person_id = id)
job
job
person
merge(x=person, y=job, by.x="id", by.y="person_id")
d <- merge(x=person, y=job, by.x="id", by.y="person_id")
install.packages("swirl")
install.packages("dplyr")
install.packages("proto")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr
)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
tbl_df
cran
?select
select(cran, ip_id, package, country)
5:230
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
cran
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
cran
filter(cran, r_version <= "3.0.2", country = "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is_na(r_version))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id
)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
by_package
cran
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs=.99)
?quantile
pack_sum$count
top_counts <- filter(pack_sum, count > 679)
class(pack_sum)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs=.99)
pack_sum
filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
students
gather(students, sex, count -grade)
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, value)
res <- gather(students2, sex_class, count, -grade)
res
students2
res <- gather(students2, sex_class, count, -grade)
?separate
res
separate(res, sex_class, c("sex", "class"))
students
?gather
students2
submit()
students3
students3
submit()
submit()
students3
submit()
submit()
?spread
students3
gather(students3, class, grade, class1:class5, na.rm=T)
g <- gather(students3, class, grade, class1:class5, na.rm=T)
g
spread(g, class, number)
spread(g, class)
stocks <- data.frame(time = as.Date('2009-01-01') + 0:9, X = rnorm(10, 0, 1,), Y = rnorm(10, 0, 2), Z = rnorm(10, 0, 4)))
stocks <- data.frame(time = as.Date('2009-01-01') + 0:9, X = rnorm(10, 0, 1,), Y = rnorm(10, 0, 2), Z = rnorm(10, 0, 4))
stocks <- data.frame(time = as.Date('2009-01-01') + 0:9, X = rnorm(10, 0, 1), Y = rnorm(10, 0, 2), Z = rnorm(10, 0, 4))
stocks
stocksm <- gather(stocks, stock, X:Z)
stocksm <- gather(stocks, stock, -time)
stocksm <- gather(stocks, stock, price, X:Z)
stocksm
stocksm %>% spread(stock, price)
stocksm %>% spread(time, price)
stocksm
stocksm %>% spread(stock, price)
stocksm %>% spread(time, price)
nxt()
students3
g <- gather(students, class, grade, class1:class5, na.rm=T)
g <- gather(students3, class, grade, class1:class5, na.rm=T)
g
spread(g, test, grade)
spread(g, test, grade)
submit()
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(status = "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?rbind_list
rbind_list(passed, failed)
sat
?separate
submit()
sat %>%
select(-contains("total")) %>%
gather(part_sex, value, read_male:math_fem)
submit()
submit()
submit()
submit()
Sys.getlocal("LC_TIME")
Sys.getlocale("LC_TIME
")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_date)
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update()
this_moment <- update(this_moment, hours=20, minutes=0)
this_moment
now()
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
update(depart, hours=17, minutes=34)
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time = mdy("June 17, 2008", tz="Singapore")
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(dplyr)
library(tidyr)
data(mtcars)
str(mtcars)
expand(mtcars, vs, cyl)
head(mtcars, 10)
seq_range(mpg, 2)
seq_range(1:2, 2)
seq_range(1:10, 2)
seq_range(1:10, 3)
seq_range(mtcars$mpg, 2)
max(mtcars$mpg)
expand(mtcars, cyl, mpg = seq_range(mpg, 2))
expand(mtcars, cyl, mpg = seq_range(mpg, 5))
df <- data.frame(x = c("a.b", "a.d", "b.c"))
df
extract(df, x, "A")
extract(df, c("A", "B"), "(.+)\\.(.+)")
extract(df, c("A", "B"), "(.)\\.(.)")
extract(df, c("A", "B"), "([abcd])\\.([abcd])")
extract(df, c("A", "B"), "([[:alnum:]]+)\\.([[:alnum:]]+)")
extract(df, x, into=c("A", "B"), regex="(.)\\.(.)")
stocks <- data.frame()
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4))
stocks
gather(stocks, stock, price, X:Z)
gather(stocks, stock, price, -time)
df <- data.frame(x = c("a.b", "a.d", "b.c"))
separate(x, c("A", "B"))
separate(df, x, c("A", "B"))
stocks
stocksm <- gather(stocks, stock, price, X:Z)
stocksm
spread(stocksm, stock, price)
spread(stocksm, stock, time)
spread(stocksm, stock, price)
spread(stocksm, time, price)
mtcars
head(mtcars)
unite(mtcars, vs_am, vs, am)
head(unite(mtcars, vs_am, vs, am), 5)
lapply(1:10, rep)
rep(1)
rep(2)
l <- lapply(1:10, function (e) rep(e, e))
l
unnest(l)
mtcars
head(mtcars)
histogram(mtcars$mpg)
hist(mtcars$mpg)
hist(mtcars$mpg, breaks=10)
summary(mtcars$mpg)
boxplot(mtcars$mpg)
hist(mtcars$mpg)
barplot(mtcars$mpg)
str(mtcars)
unique(mtcars$gear)
mtcars$gear <- factor(mtcars$gear, levels=c(3, 4, 5), labels=c("3g", "4g", "5g"))
str(mtcars)
boxplot(mtcars$gear)
barplot(mtcars$gear)
table(mtcars$gear)
barplot(table(mtcars$gear))
barplot(mtcars$cyl)
barplot(table(mtcars$cyl))
boxplot(mpg ~ cyl, mtcars)
boxplot(mpg ~ cyl, mtcars, color=blue)
boxplot(mpg ~ cyl, mtcars, color = "blue")
boxplot(mpg ~ cyl, mtcars, col = "red")
subset(mtcars, mpg = 21)
subset(mtcars, mpg == 21)
hist(subset(mtcars, mpg == 21))
hist(subset(mtcars, mpg == 21)$cyl)
hist(subset(mtcars, cyl == 6)$mpg)
?par
par(c = bg)
par("bg")
par(bg = "red")
hist(subset(mtcars, cyl == 6)$mpg)
par(bg = "white")
hist(subset(mtcars, cyl == 6)$mpg)
par(mfrow=c(2, 1))
hist(subset(mtcars, cyl == 6)$mpg)
hist(subset(mtcars, cyl == 4)$mpg)
subset(mtcars, cyl == 4)$mpg
hist(subset(mtcars, cyl == 4)$mpg)
?with
source('~/GitHub/ExData_Plotting1/plot3.r')
setwd("~/GitHub/ExData_Plotting1")
source('~/GitHub/ExData_Plotting1/plot3.r')
?legend
source('~/GitHub/ExData_Plotting1/plot3.r')
source('~/GitHub/ExData_Plotting1/plot3.r')
?legend
source('~/GitHub/ExData_Plotting1/plot3.r')
source('~/GitHub/ExData_Plotting1/plot3.r')
?legend
source('~/GitHub/ExData_Plotting1/plot3.r')
source('~/GitHub/ExData_Plotting1/plot3.r')
source('~/GitHub/ExData_Plotting1/plot3.r')
source('~/GitHub/ExData_Plotting1/plot3.r')
?legend
source('~/GitHub/ExData_Plotting1/plot3.r')
source('~/GitHub/ExData_Plotting1/plot3.r')
source('~/GitHub/ExData_Plotting1/plot3.r')
source('~/GitHub/ExData_Plotting1/plot3.r')
source('~/GitHub/ExData_Plotting1/plot3.r')
source('~/GitHub/ExData_Plotting1/plot3.r')
source('~/GitHub/ExData_Plotting1/plot1.r')
source('~/GitHub/ExData_Plotting1/plot4.r')
source('~/.active-rstudio-document')
source('~/GitHub/ExData_Plotting1/plot4.r')
source('~/GitHub/ExData_Plotting1/plot4.r')
source('~/GitHub/ExData_Plotting1/plot4.r')
source('~/GitHub/ExData_Plotting1/plot4.r')
source('~/GitHub/ExData_Plotting1/plot4.r')
par("cex")
source('~/GitHub/ExData_Plotting1/plot4.r')
